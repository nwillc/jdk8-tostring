
/*
 * Copyright (c) 2015, nwillc@gmail.com
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.tmatesoft.sqljet:sqljet:1.1.9',
                  'au.com.ish.gradle:release:2.2.2'
    }
}

plugins {
    id "java"
    id "jacoco"
    id "maven-publish"
    id "com.github.nwillc.vplugin" version "1.2.1"
    id "com.github.kt3k.coveralls" version "2.1.0"
    id "com.jfrog.bintray" version "1.2"
}

apply plugin: 'release'

dependencies {
    testCompile 'junit:junit:4.12',
                'org.assertj:assertj-core:3.0.0',
                'com.github.nwillc:contracts:1.6.7'
}

repositories {
    mavenCentral()
}

group = "com.github.nwillc"
archivesBaseName = "tostring"
version="0.2.1"
targetCompatibility = "1.8"
sourceCompatibility = "1.8"

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
        }
    }
}

release {
    failOnSnapshotDependencies = true
    allowLocalModifications = true
    releaseDryRun = false
    scm = 'git'
}

if (project.hasProperty('bintrayUser')) {
    bintray {
        user = bintrayUser  // provide value as a property
        key = bintrayKey // provide value as a property

        dryRun = false // Whether to run this as dry-run, without deploying
        publish = true // If version should be auto published after an upload
        publications = ['mavenJava']
        pkg {
            repo = 'maven'
            name = 'jdk8-tostring'
            desc = 'Utilities to generate a standardized toString of a class using Java 8 features.'
            websiteUrl = 'https://github.com/nwillc/jdk8-tostring'
            issueTrackerUrl = 'https://github.com/nwillc/jdk8-tostring/issues'
            vcsUrl = 'https://github.com/nwillc/jdk8-tostring.git'
            licenses = ['ISC']
            labels = ['tostring']
            publicDownloadNumbers = true
        }
    }
}

